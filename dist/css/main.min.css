.wrapper{margin:0 auto;width:80%;max-width:1300px}.wrapper-small{margin:0 auto;width:80%;max-width:950px}.section-heading{font-size:2.5rem;text-transform:uppercase;color:#fff;margin:1em 0;text-align:center}.section{padding:5em 0}@media (min-width:768px){.section-heading{font-size:3rem}}@media (min-width:992px){.section-heading{font-size:3.5rem}}.about{position:relative;top:-3vh;background-color:#1a1a1a;height:auto;z-index:1;padding:2em;border-bottom:4px solid #fa2025}.about__table{display:flex;flex-direction:row;flex-wrap:wrap;width:100%}.about__column{width:100%;display:flex;flex-direction:column;align-items:center;border-bottom:1px solid #797979;padding:2em 0}.about__column img{width:30px}.about__column:last-child{border:none}.about__heading{color:#fff;font-size:2rem;margin:.5em 0 1em;text-align:center}.about__text{text-align:center;color:#797979;font-size:1.8rem}@media (min-width:768px){.about{padding:2em 0}.about__column{width:50%;padding:2em}.about__column:nth-child(3){border:none}.about__column img{width:35px}.about__heading{font-size:2.3rem}.about__text{font-size:2rem}}@media (min-width:1200px){.about__table{flex-wrap:nowrap}.about__column{width:100%;border-bottom:none}.about__column,.about__column:nth-child(3){border-right:1px solid #797979}}.offer{display:flex;flex-direction:column;margin-top:5em}.offer__info{text-align:center;font-size:1.8rem}.offer li{font-size:1.8rem;list-style-type:none}.offer__container{margin:3em auto}.offer ol{display:flex;flex-wrap:wrap;justify-content:space-around}.offer ol li{margin:1em 0}.offer ul li{margin:.5em 1.2em;list-style-type:disc}.offer__left{padding:2em}.offer__right{display:flex;justify-content:center;align-items:center;height:50vh;background-size:cover;background-position:50%;overflow:hidden;background-repeat:no-repeat;background-image:url(../img/bg-sm.jpg)}.offer__img{width:80%}@media (min-width:768px){.offer__info,.offer li{font-size:2rem}}@media (min-width:992px){.offer{flex-direction:row;height:auto}.offer__left{flex:2;height:100%}.offer__container{width:80%}.offer__right{flex:1;height:auto;background-image:url(../img/bg-big.jpg)}}*,:after,:before{box-sizing:border-box;margin:0;padding:0}html{font-size:62.5%;scroll-behavior:smooth}body{font-size:1.6rem;overflow-x:hidden;font-family:Montserrat,sans-serif;background-color:#191919;color:#797979}::-moz-selection{background-color:#fa2025;color:#fff}::selection{background-color:#fa2025;color:#fff}::-webkit-scrollbar{width:15px}::-webkit-scrollbar-track{background-color:#191919}::-webkit-scrollbar-thumb{background:#aaa}::-webkit-scrollbar-thumb:hover{background:#717171}.header{display:grid;grid-template-columns:repeat(2,1fr);grid-template-rows:repeat(2,1fr);height:105vh;overflow:hidden}.header .company-name{font-family:Sigmar One,cursive;color:#fff;font-size:2.8rem}.header__text{display:grid;justify-content:center;align-content:center;grid-row:2/3;grid-column:1/3;padding:2em;background-color:#1f1f1f}.header__text p{margin:1em 0;color:#797979;font-weight:400;font-size:1.8rem}.header__btn{position:relative;color:#fff;text-decoration:none;display:flex;align-items:center;padding:1em;background-color:#fa2025;width:220px;border-radius:4px;font-weight:500;border-bottom:6px solid #a40003;border-right:6px solid #a40003;transition:border .3s ease,transform .3s ease;font-size:1.8rem}.header__btn img{margin-left:1em;width:25px}.header__btn:hover{transform:scale(.95)}.header__img{grid-row:1/2;grid-column:1/3;position:relative;width:100%;height:100%;background-image:url(../img/header.jpg);z-index:1;background-size:cover;background-position:50%}.header__shadow{position:absolute;width:100%;height:100%;background-color:rgba(0,0,0,.3)}.hamburger{position:fixed;top:3em;left:1em;transform:translateY(-50%);z-index:3}.hamburger-inner,.hamburger-inner:after,.hamburger-inner:before{background-color:#fff;z-index:3}.nav-mobile{position:fixed;top:0;left:0;bottom:0;right:0;height:100%;display:flex;justify-content:center;align-items:center;flex-direction:column;z-index:2;transform:translateX(-102%);transition:transform .3s;background-color:#1f1f1f}.nav-mobile--active{transform:translateX(0)}.nav-desktop{display:none}.nav__link{position:relative;display:inline-block;margin:.5em .4rem;padding:.5em;font-size:2.3rem;color:#fff;text-transform:uppercase;text-decoration:none}.nav__link:hover{color:#fa2025}.top{width:40px;height:40px;right:20px;bottom:65px;border:1px solid #fff;background-color:transparent;border-radius:50%}.booksy-btn,.top{position:fixed;opacity:0;display:flex;justify-content:center;align-items:center;text-decoration:none;z-index:1;transition:opacity .3s ease;pointer-events:none}.booksy-btn{width:100%;padding:1em;right:0;background-color:#fa2025;color:#fff;bottom:0;font-size:1.8rem}.booksy-btn img{margin-left:.5em;width:25px}.booksy-btn__active,.top__active{pointer-events:auto;opacity:1}@media (min-width:768px){.header .company-name{font-size:4rem}.header__text p{font-size:2.2rem}.offer__option-img{height:auto;-o-object-fit:cover;object-fit:cover}.booksy-btn{width:200px}}@media (min-width:992px){.header .company-name{font-size:4.9rem}}@media (min-width:1200px){.header{grid-template-rows:auto repeat(2,1fr)}.header__text{grid-row:2/4;grid-column:1/2}.header__img{grid-row:1/4;grid-column:2/3}.nav{grid-column:1/2;grid-row:1/2;padding:1em}.nav-desktop{display:block;z-index:1;background-color:#1f1f1f}.hamburger{display:none}.gallery{grid-template-columns:repeat(8,1fr)}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
